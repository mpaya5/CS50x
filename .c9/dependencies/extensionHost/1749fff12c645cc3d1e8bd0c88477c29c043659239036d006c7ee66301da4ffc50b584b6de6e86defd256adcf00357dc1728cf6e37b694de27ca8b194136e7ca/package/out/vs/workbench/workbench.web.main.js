/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
define(["require", "exports", "vs/platform/instantiation/common/extensions", "vs/platform/request/common/request", "vs/workbench/services/request/browser/requestService", "vs/platform/clipboard/common/clipboardService", "vs/platform/clipboard/browser/clipboardService", "vs/platform/accessibility/common/accessibility", "vs/platform/accessibility/common/accessibilityService", "vs/platform/extensionManagement/common/extensionManagement", "vs/platform/lifecycle/browser/lifecycleService", "vs/platform/lifecycle/common/lifecycle", "vs/platform/dialogs/common/dialogs", "vs/platform/dialogs/browser/dialogService", "vs/platform/contextview/browser/contextView", "vs/platform/contextview/browser/contextMenuService", "vs/workbench/services/backup/common/backup", "vs/workbench/services/backup/common/backupFileService", "vs/workbench/services/extensionManagement/common/extensionManagementService", "vs/workbench/workbench.common.main", "vs/workbench/browser/web.main", "vs/workbench/services/integrity/browser/integrityService", "vs/workbench/services/textMate/browser/textMateService", "vs/workbench/services/search/common/searchService", "vs/workbench/services/output/common/outputChannelModelService", "vs/workbench/services/textfile/browser/textFileService", "vs/workbench/services/keybinding/browser/keymapService", "vs/workbench/services/extensions/browser/extensionService", "vs/workbench/services/extensionManagement/common/extensionManagementServerService", "vs/workbench/services/telemetry/browser/telemetryService", "vs/workbench/services/configurationResolver/browser/configurationResolverService", "vs/workbench/services/credentials/browser/credentialsService", "vs/workbench/services/url/browser/urlService", "vs/workbench/browser/web.simpleservices", "vs/workbench/contrib/resources/browser/resourceServiceWorkerClient", "vs/workbench/contrib/preferences/browser/keyboardLayoutPicker", "vs/workbench/contrib/debug/browser/extensionHostDebugService", "vs/workbench/contrib/webview/browser/webviewService", "vs/workbench/contrib/webview/browser/webviewEditorService", "vs/workbench/contrib/terminal/browser/terminalNativeService", "vs/workbench/contrib/terminal/browser/terminalInstanceService", "vs/workbench/contrib/tasks/browser/taskService"], function (require, exports, extensions_1, request_1, requestService_1, clipboardService_1, clipboardService_2, accessibility_1, accessibilityService_1, extensionManagement_1, lifecycleService_1, lifecycle_1, dialogs_1, dialogService_1, contextView_1, contextMenuService_1, backup_1, backupFileService_1, extensionManagementService_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    extensions_1.registerSingleton(request_1.IRequestService, requestService_1.RequestService, true);
    extensions_1.registerSingleton(extensionManagement_1.IExtensionManagementService, extensionManagementService_1.ExtensionManagementService);
    extensions_1.registerSingleton(backup_1.IBackupFileService, backupFileService_1.BackupFileService);
    extensions_1.registerSingleton(dialogs_1.IDialogService, dialogService_1.DialogService, true);
    extensions_1.registerSingleton(clipboardService_1.IClipboardService, clipboardService_2.BrowserClipboardService, true);
    extensions_1.registerSingleton(accessibility_1.IAccessibilityService, accessibilityService_1.BrowserAccessibilityService, true);
    extensions_1.registerSingleton(lifecycle_1.ILifecycleService, lifecycleService_1.BrowserLifecycleService);
    extensions_1.registerSingleton(contextView_1.IContextMenuService, contextMenuService_1.ContextMenuService);
});
//#endregion
//# sourceMappingURL=workbench.web.main.js.map